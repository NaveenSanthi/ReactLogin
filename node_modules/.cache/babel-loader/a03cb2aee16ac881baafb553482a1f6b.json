{"ast":null,"code":"var _jsxFileName = \"G:\\\\React\\\\10Login\\\\login\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport \"./Login.css\";\nimport Card from \"../UI/Card\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport ErrorModal from \"../ErrorModule/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const loginDetails = [{\n    email: \"@\",\n    pwd: \"demo12345\"\n  }, {\n    email: \"nave@\",\n    pwd: \"nave2222\"\n  }, {\n    email: \"lava@\",\n    pwd: \"demlava22222o12345\"\n  }];\n  const [errorHandler, SetErrorHandler] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n\n  function statefn(state, action) {\n    if (action.title === \"EMAIL_USER_INPUT\") {\n      return {\n        emailValue: action.val,\n        emailIsvalid: action.val.includes(\"@\")\n      };\n    }\n\n    if (action.title === \"PASSWORD_USER_INPUT\") {\n      return {\n        passwordValue: action.val,\n        passwordIsvalid: action.val.includes(\"@\")\n      };\n    }\n\n    if (action.title === \"INPUT_BLUR\") {\n      return {\n        emailValue: state.emailValue,\n        emailIsvalid: state.emailValue.trim().length > 6\n      };\n    }\n\n    if (action.title === \"PASSWORD_BLUR\") {\n      return {\n        passwordValue: state.passwordValue,\n        passwordIsvalid: state.passwordValue.trim().length > 6\n      };\n    }\n  }\n\n  const [entireState, dispatchState] = useReducer(statefn, {\n    emailValue: \"\",\n    emailIsvalid: null,\n    passwordValue: \"\",\n    passwordIsvalid: null\n  }); //by using object destructing we can use below\n  //below use effect will run when the isValid state update hapen\n\n  const {\n    emailIsvalid: emailValid\n  } = entireState;\n  const {\n    passwordIsvalid: passwordValid\n  } = entireState;\n  useEffect(() => {\n    console.log(\"Checking form validity\");\n    setFormValid(entireState.emailIsvalid && entireState.passwordIsvalid);\n  }, [emailValid, passwordValid]);\n\n  function emailChangeHandler(event) {\n    dispatchState({\n      title: \"EMAIL_USER_INPUT\",\n      val: event.target.value\n    }); // setFormValid(\n    //   event.target.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  }\n\n  function passwordChangeHandler(event) {\n    dispatchState({\n      title: \"PASSWORD_USER_INPUT\",\n      val: event.target.value\n    }); // setFormValid(emailState.isValid && event.target.value.trim().length > 6);\n  }\n\n  function emailValidator() {\n    dispatchState({\n      title: \"INPUT_BLUR\"\n    });\n  }\n\n  function passwordValidator() {\n    dispatchState({\n      title: \"PASSWORD_BLUR\"\n    });\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const email = loginDetails.find(obj => obj.email === entireState.emailValue);\n\n    if (email) {\n      const d = loginDetails.find(ob => email.pwd === entireState.passwordValue);\n\n      if (d) {\n        props.loginHandler(entireState.emailValue, entireState.passwordValue);\n      } else {\n        SetErrorHandler({\n          title: \"Invalid Password\",\n          message: \"Entered Valid Password\"\n        });\n        return;\n      }\n\n      props.loginHandler(entireState.emailValue, entireState.passwordValue);\n    } else {\n      SetErrorHandler({\n        title: \"Invalid input\",\n        message: \"Entered Email and password are not registered\"\n      });\n      return;\n    }\n  }\n\n  function errorRemover() {\n    SetErrorHandler(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [errorHandler && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      message: errorHandler.title,\n      description: errorHandler.message,\n      errorRemover: errorRemover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: entireState.emailIsvalid === false ? \"emailInvalid\" : \"\",\n          onChange: emailChangeHandler,\n          onBlur: emailValidator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: passwordChangeHandler,\n          onBlur: passwordValidator,\n          className: entireState.passwordIsvalid === false ? \"pwdInvalid\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: !formValid ? \"invalid\" : \" valid\",\n          disabled: !formValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"FqeH97Ummhl+PlsugZLLfSswmR0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Card","React","useState","useEffect","useReducer","ErrorModal","Login","props","loginDetails","email","pwd","errorHandler","SetErrorHandler","formValid","setFormValid","statefn","state","action","title","emailValue","val","emailIsvalid","includes","passwordValue","passwordIsvalid","trim","length","entireState","dispatchState","emailValid","passwordValid","console","log","emailChangeHandler","event","target","value","passwordChangeHandler","emailValidator","passwordValidator","submitHandler","preventDefault","find","obj","d","ob","loginHandler","message","errorRemover"],"sources":["G:/React/10Login/login/src/Components/Login/Login.js"],"sourcesContent":["import \"./Login.css\";\r\nimport Card from \"../UI/Card\";\r\nimport React, { useState, useEffect, useReducer } from \"react\";\r\nimport ErrorModal from \"../ErrorModule/ErrorModal\";\r\n\r\nfunction Login(props) {\r\n  const loginDetails = [\r\n    { email: \"@\", pwd: \"demo12345\" },\r\n    { email: \"nave@\", pwd: \"nave2222\" },\r\n    { email: \"lava@\", pwd: \"demlava22222o12345\" },\r\n  ];\r\n  const [errorHandler, SetErrorHandler] = useState(false);\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  function statefn(state, action) {\r\n    if (action.title === \"EMAIL_USER_INPUT\") {\r\n      return { emailValue: action.val, emailIsvalid: action.val.includes(\"@\") };\r\n    }\r\n    if (action.title === \"PASSWORD_USER_INPUT\") {\r\n      return {\r\n        passwordValue: action.val,\r\n        passwordIsvalid: action.val.includes(\"@\"),\r\n      };\r\n    }\r\n    if (action.title === \"INPUT_BLUR\") {\r\n      return {\r\n        emailValue: state.emailValue,\r\n        emailIsvalid: state.emailValue.trim().length > 6,\r\n      };\r\n    }\r\n    if (action.title === \"PASSWORD_BLUR\") {\r\n      return {\r\n        passwordValue: state.passwordValue,\r\n        passwordIsvalid: state.passwordValue.trim().length > 6,\r\n      };\r\n    }\r\n  }\r\n\r\n  const [entireState, dispatchState] = useReducer(statefn, {\r\n    emailValue: \"\",\r\n    emailIsvalid: null,\r\n    passwordValue: \"\",\r\n    passwordIsvalid: null,\r\n  });\r\n\r\n  //by using object destructing we can use below\r\n  //below use effect will run when the isValid state update hapen\r\n  const { emailIsvalid: emailValid } = entireState;\r\n  const { passwordIsvalid: passwordValid } = entireState;\r\n  useEffect(() => {\r\n    console.log(\"Checking form validity\");\r\n    setFormValid(entireState.emailIsvalid && entireState.passwordIsvalid);\r\n  }, [emailValid, passwordValid]);\r\n\r\n  function emailChangeHandler(event) {\r\n    dispatchState({ title: \"EMAIL_USER_INPUT\", val: event.target.value });\r\n    // setFormValid(\r\n    //   event.target.value.includes(\"@\") && passwordState.value.trim().length > 6\r\n    // );\r\n  }\r\n  function passwordChangeHandler(event) {\r\n    dispatchState({ title: \"PASSWORD_USER_INPUT\", val: event.target.value });\r\n    // setFormValid(emailState.isValid && event.target.value.trim().length > 6);\r\n  }\r\n  function emailValidator() {\r\n    dispatchState({ title: \"INPUT_BLUR\" });\r\n  }\r\n  function passwordValidator() {\r\n    dispatchState({ title: \"PASSWORD_BLUR\" });\r\n  }\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const email = loginDetails.find(\r\n      (obj) => obj.email === entireState.emailValue\r\n    );\r\n    if (email) {\r\n      const d = loginDetails.find(\r\n        (ob) => email.pwd === entireState.passwordValue\r\n      );\r\n      if (d) {\r\n        props.loginHandler(entireState.emailValue, entireState.passwordValue);\r\n      } else {\r\n        SetErrorHandler({\r\n          title: \"Invalid Password\",\r\n          message: \"Entered Valid Password\",\r\n        });\r\n        return;\r\n      }\r\n      props.loginHandler(entireState.emailValue, entireState.passwordValue);\r\n    } else {\r\n      SetErrorHandler({\r\n        title: \"Invalid input\",\r\n        message: \"Entered Email and password are not registered\",\r\n      });\r\n      return;\r\n    }\r\n  }\r\n  function errorRemover() {\r\n    SetErrorHandler(null);\r\n  }\r\n  return (\r\n    <Card>\r\n      {errorHandler && (\r\n        <ErrorModal\r\n          message={errorHandler.title}\r\n          description={errorHandler.message}\r\n          errorRemover={errorRemover}\r\n        />\r\n      )}\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"email\">\r\n          <label>E-mail</label>\r\n          <input\r\n            className={entireState.emailIsvalid === false ? \"emailInvalid\" : \"\"}\r\n            onChange={emailChangeHandler}\r\n            onBlur={emailValidator}\r\n          ></input>\r\n        </div>\r\n        <div className=\"password\">\r\n          <label>Password</label>\r\n          <input\r\n            onChange={passwordChangeHandler}\r\n            onBlur={passwordValidator}\r\n            className={\r\n              entireState.passwordIsvalid === false ? \"pwdInvalid\" : \"\"\r\n            }\r\n          ></input>\r\n        </div>\r\n        <div className=\"btn\">\r\n          <button\r\n            className={!formValid ? \"invalid\" : \" valid\"}\r\n            disabled={!formValid}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}